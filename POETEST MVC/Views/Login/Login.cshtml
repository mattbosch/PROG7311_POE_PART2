@model POETEST_MVC.Models.User

@{
    ViewBag.Title = "Login";
}

<style>
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 400px;
        background-color: #f5f5f5;
        padding: 20px;
        border-radius: 4px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin: auto;
    }

    .form-group {
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

        .form-group .form-control {
            width: 100%;
            max-width: 250px;
        }

    .btn-login {
        background-color: #007bff;
        color: #fff;
    }
</style>

<div class="container">
    <h2 class="text-center">Login</h2>

    @using (Html.BeginForm("Login", "Login", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger validation-message" })
        <div class="form-group text-center">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger validation-message" })
        </div>

        <div class="form-group text-center">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger validation-message" })
        </div>

        <div class="form-group text-center">
            <input type="submit" value="Login" class="btn btn-login" />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
